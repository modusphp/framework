<?php

use Aura\Di;

$di = new Di\Container(new Di\Forge(new Di\Config));


/*
 * --------------------------------------------------
 * DI Parameter Configuration
 * --------------------------------------------------
 */
$di->params['Modus\FrontController\Http'] = array(
    'config' => $config,
    'di' => $di,
    'router' => $di->lazyGet('router'),
    'responseMgr' => $di->lazyGet('response'),
);

$di->params['Aura\Web\Context'] = array(
    'globals' => $GLOBALS,
);

$di->params['Modus\Controller\Base'] = array(
    'template' => $di->lazyGet('template'),
    'session' => $di->lazyGet('session'),
    'context' => $di->lazyGet('context'),
    'response' => $di->lazyGet('context_response'),
    'factory' => $di->newInstance('Modus\Common\Model\Factory'),
);

$di->params['Modus\Router\Standard'] = array(
    'routes' => require('routes.php'),
);

/*
 * --------------------------------------------------
 * Model Configuration
 * --------------------------------------------------
 */
$di->params['Modus\Common\Model\Factory'] = array(
    'map' => array(

    ),
);

$di->params['Modus\Common\Model\Storage\Database'] = array(
    'master' => $di->lazyGet('master'),
    'slave' => $di->lazyGet('slave'),
);

/*
 * --------------------------------------------------
 * Simple DI Settings
 * --------------------------------------------------
 */
$di->set('context', $di->lazyNew('Aura\Web\Context'));
$di->set('context_response', $di->lazyNew('Aura\Web\Response'));
$di->set('response', $di->lazyNew('Modus\Response\Manager\Factory'));
$di->set('session', $di->lazyNew('Modus\Session\Aura'));
$di->set('router', $di->lazyNew('Modus\Router\Standard'));
$di->set('connection_factory', $di->lazyNew('Aura\Sql\ConnectionFactory'));

/*
 * --------------------------------------------------
 * Database Configuration
 * --------------------------------------------------
 */
$di->set('master', function() use ($config, $di) {
    $params = $config['database']['master'];
    $factory = $di->get('connection_factory');
    return $factory->newInstance(
        $params['adapter'],
        ['host' => $params['host'], 'dbname' => $params['name']],
        $params['user'],
        $params['pass']
    );
});

$di->set('slave', function() use ($config, $di) {
    $params = $config['database']['slave'];
    $factory = $di->get('connection_factory');
    return $factory->newInstance(
        $params['adapter'],
        ['host' => $params['host'], 'dbname' => $params['name']],
        $params['user'],
        $params['pass']
    );
});

/*
 * --------------------------------------------------
 * Template Setup
 * --------------------------------------------------
 */
$di->set('template', function() use ($config) {
    $params = $config['template'];
    $view = new Modus\Template\Factory($params['layout'], $params['view_paths']);
    return $view->getTemplate();
});



